package learning;

class Node
{
	int data;
	Node next;
}

class MyList
{
	Node head;
	public void insert(int data)
	{
		Node node = new Node();
		node.data = data;
		node.next = null;
		
		if(head==null)
		{
			head = node;
		}
		else
		{
			Node n = head;
			while(n.next!=null)
			{
				n = n.next;
			}
			n.next = node;
		}
	}
	
	public void show()
	{
		Node n = head;
		while(n!=null)
		{
			System.out.println(n.data);
			n = n.next;
		}
	}
	
	public void insertBeg(int data)
	{
		Node node = new Node();
		node.data = data;
		node.next = head;
		head = node;
	}
	
	public void insertAt(int index,int data)
	{
		if(index == 0)
		{
			insertBeg(data);
			return ;
		}
		Node node = new Node();
		node.data = data;
		node.next = head;
		Node n = head;
		for(int i=0;i<index-1;i++)
		{
			n = n.next;
		}
		node.next = n.next;
		n.next = node;
	}
	
	public void deleteAt(int index)
	{
		if(index == 0)
		{
			head = head.next;
		}
		else
		{
			Node n = head;
			for(int i=0;i<index-1;i++)
			{
				n = n.next;
			}
			n.next = n.next.next;
		}
	}
	
	public void count()
	{
		int count = 0;
		Node n = head;
		while(n!=null)
		{
			count++;
			n = n.next;
		}
		System.out.println(count);
	}
	
	public void reverse()
	{
		Node prev = null;
        Node current = head;
        Node next = null;

        while (current != null) {
            next = current.next;
            current.next = prev;
            prev = current;
            current = next;
        }

        head = prev;
	}
}

public class LinkedListDemo {

	public static void main(String[] args) {
		MyList list = new MyList();
		list.insert(10); //0
		list.insert(20); //1
		list.insert(30); //2
		list.insert(40); //3
//		list.insertAt(2,25);
//		
//		list.insertBeg(5);
//		
////		//5 10 20 25 30 40 
////		list.deleteAt(2);
//		list.show();
//		list.count();
		list.reverse();
		list.show();

	}

}
